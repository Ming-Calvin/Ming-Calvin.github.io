<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>a</title>
    <url>/2018/10/05/Html%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="Html概述"><a href="#Html概述" class="headerlink" title="Html概述"></a>Html概述</h3><p>&nbsp;&nbsp;Html是一种<strong>标记语言</strong>，它使用<strong>标记标签</strong>来描述页面</p>
<h3 id="Html标签"><a href="#Html标签" class="headerlink" title="Html标签"></a>Html标签</h3><p>1.html分位单标签和双标签</p>
<pre><code>单标签    &lt;br&gt;
双标签    &lt;html&gt; &lt;/html&gt;</code></pre><p>2.html标签的关系</p>
<pre><code>1.包含：
    &lt;head&gt;
        &lt;title&gt; &lt;/title&gt;
    &lt;/head&gt;
2.并列：
    &lt;head&gt; &lt;/head&gt;
    &lt;body&gt; &lt;/body&gt;</code></pre><p>3.骨架标签</p>
<table>
<thead>
<tr>
<th align="center">标签</th>
<th align="center">含义</th>
<th align="center">小猪佩奇</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&lt; html &gt;</td>
<td align="center">根标签</td>
<td align="center">全身</td>
</tr>
<tr>
<td align="center">&lt; head &gt;</td>
<td align="center">头部</td>
<td align="center">头</td>
</tr>
<tr>
<td align="center">&lt; title &gt;</td>
<td align="center">标题</td>
<td align="center">眼睛</td>
</tr>
<tr>
<td align="center">&lt; body &gt;</td>
<td align="center">内容</td>
<td align="center">躯干</td>
</tr>
</tbody></table>
<hr>
<a id="more"></a>

<h2 id="编译器-VS-code"><a href="#编译器-VS-code" class="headerlink" title="编译器 VS code"></a>编译器 VS code</h2><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + N</td>
<td align="center">新建</td>
</tr>
<tr>
<td align="center">Ctrl + S</td>
<td align="center">保存</td>
</tr>
<tr>
<td align="center">Ctrl + &nbsp; “+” &nbsp; / &nbsp; “-“ &nbsp;</td>
<td align="center">字体增大/缩小</td>
</tr>
<tr>
<td align="center">“ &nbsp; !  “</td>
<td align="center">创建骨架</td>
</tr>
<tr>
<td align="center">Alt + B</td>
<td align="center">在默认的浏览器编译</td>
</tr>
</tbody></table>
<h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><pre><code>1. Chinese 翻译中文
2. Open in Browser 在浏览器中打开
3. Auto Rename Tag 改“前面的标签”时更改“后面的标签”</code></pre><hr>
<h2 id="lt-DOCTYPE-gt-和lang以及字符集的作用"><a href="#lt-DOCTYPE-gt-和lang以及字符集的作用" class="headerlink" title="&lt;!DOCTYPE&gt;和lang以及字符集的作用"></a>&lt;!DOCTYPE&gt;和lang以及字符集的作用</h2><h3 id="lt-DOCTYPE-gt"><a href="#lt-DOCTYPE-gt" class="headerlink" title="&lt;!DOCTYPE&gt;"></a>&lt;!DOCTYPE&gt;</h3><p><img src="https://pic.images.ac.cn/image/5e968519ef882" alt></p>
<p>&nbsp;&nbsp;<strong>告诉浏览器使用哪种Html显示网页</strong></p>
<pre><code>注意：
1.要在&lt; html &gt;标签前面
2.不属于&lt; html &gt;标签它是文档声明标签</code></pre><h3 id="lang"><a href="#lang" class="headerlink" title="lang"></a>lang</h3><p><img src="https://pic.images.ac.cn/image/5e96851a5c5e5" alt></p>
<p><strong>当前文档显示语言</strong>（告诉人们是什么语言的网站）</p>
<pre><code>注意:
1.en ：英文      zh-CN ： 中文
2.英文中可以有中文，中文中可以有英文</code></pre><h3 id="lt-Charset-gt-字符集"><a href="#lt-Charset-gt-字符集" class="headerlink" title="&lt; Charset &gt;字符集"></a>&lt; Charset &gt;字符集</h3><p><img src="https://pic.images.ac.cn/image/5e96851abc6df" alt></p>
<pre><code>utf-8 万国码  （不会写乱码）</code></pre><h2 id="标题标签-head缩写-lt-h1-gt-lt-h6-gt"><a href="#标题标签-head缩写-lt-h1-gt-lt-h6-gt" class="headerlink" title="标题标签 (head缩写) &lt; h1 &gt;-&lt; h6 &gt;"></a>标题标签 (head缩写) &lt; h1 &gt;-&lt; h6 &gt;</h2><pre><code>&lt;h1&gt;我是一级标题&lt;/h1&gt;
特点：
1.文字变大变粗
2.一个标题独占一行</code></pre><h2 id="段落标签-Paragraph缩写-lt-p-gt"><a href="#段落标签-Paragraph缩写-lt-p-gt" class="headerlink" title="段落标签 (Paragraph缩写) &lt; p &gt;"></a>段落标签 (Paragraph缩写) &lt; p &gt;</h2><pre><code>&lt;p&gt;我是第一段落&lt;/p&gt;</code></pre><h2 id="换行标签-break缩写-lt-br-gt"><a href="#换行标签-break缩写-lt-br-gt" class="headerlink" title="换行标签 (break缩写) &lt; br/ &gt;"></a>换行标签 (break缩写) &lt; br/ &gt;</h2><pre><code>注意：
1.单标签
2.之间的空隙比段落间小</code></pre><h2 id="文本格式化标签-用前面的"><a href="#文本格式化标签-用前面的" class="headerlink" title="文本格式化标签 (用前面的)"></a>文本格式化标签 (用前面的)</h2><pre><code>1.粗体  &lt;strong&gt; &lt;/strong&gt; 或 &lt;b&gt; &lt;/b&gt;
2.斜体  &lt;em&gt; &lt;/em&gt; 或 &lt;i&gt; &lt;/i&gt;
3.删除线  &lt;del&gt; &lt;/del&gt; 或 &lt;s&gt; &lt;/s&gt;
4.下划线  &lt;ins&gt; &lt;/ins&gt; 或 &lt;u&gt; &lt;/u&gt;</code></pre><h2 id="lt-div-gt-和-lt-span-gt-标签-没有语意"><a href="#lt-div-gt-和-lt-span-gt-标签-没有语意" class="headerlink" title="&lt; div &gt;和&lt; span &gt;标签 (没有语意)"></a>&lt; div &gt;和&lt; span &gt;标签 (没有语意)</h2><h3 id="lt-div-gt-lt-div-gt-division缩写"><a href="#lt-div-gt-lt-div-gt-division缩写" class="headerlink" title="&lt; div &gt; &lt; /div &gt; (division缩写)"></a>&lt; div &gt; &lt; /div &gt; (division缩写)</h3><pre><code>一个人独占一行（是个大盒子）</code></pre><h3 id="lt-span-gt-标签-（span缩写）"><a href="#lt-span-gt-标签-（span缩写）" class="headerlink" title="&lt; span &gt; 标签 （span缩写）"></a>&lt; span &gt; 标签 （span缩写）</h3><pre><code>一行可以放多个span（是个小盒子）</code></pre><h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img src="https://ae01.alicdn.com/kf/H14d4c7c77288461fac861dd52e872f081.png" alt></p>
<h2 id="图像标签-image缩写-lt-img-gt"><a href="#图像标签-image缩写-lt-img-gt" class="headerlink" title="图像标签 (image缩写) &lt; img &gt;"></a>图像标签 (image缩写) &lt; img &gt;</h2><pre><code>&lt;img src=&quot;图像url&quot; /&gt;</code></pre><p>  <strong>属性：</strong></p>
<pre><code>1. src 是&lt;img&gt;的必须属性指向文件的路径和文件名
2. alt 替代文本 当文字不能显示时，用文字替换
3. title 提示文本 鼠标放在图像时，显示的文字
4. width 图片的宽
5. heigh 图片的高
  （一般宽/高只改一个）
6. border 边框粗细</code></pre><h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h2><pre><code>目录文件夹：普通文件夹，有Html、图像等
根目录：最外的一层文件夹</code></pre><p><img src="https://ae01.alicdn.com/kf/Hff5981abb86843a2ab2c5c7697af405c5.png" alt></p>
<pre><code>1. 相对路径：图片相对Html页面的位置
    1. 同一级: 直接写文件名
    2. 下一级: 图像目录/文件名
    3. 上一级: ../文件名

2. 绝对路径 (少用)
    1. 电脑中
    2. 网络中

3. 符号
    1.绝对路径：\
    2.相对路径：/</code></pre><h2 id="超链接标签-anchor缩写-lt-a-gt"><a href="#超链接标签-anchor缩写-lt-a-gt" class="headerlink" title="超链接标签 (anchor缩写) &lt; a &gt;"></a>超链接标签 (anchor缩写) &lt; a &gt;</h2><pre><code>&lt;a herf=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt; 文本或图像 &lt;/a&gt;</code></pre><p><strong>属性：</strong></p>
<pre><code>herf 用于链接目标的url地址
target 用于链接页面的打开方式 
       1. _self为默认值 
       2. _blank为在新窗口打开</code></pre><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><pre><code>1. 外部链接：以&quot;http:// + 网址 &quot; 开头
2. 内部链接：直接链接内部页面
3. 空链接：&lt;a herf=&quot;#&quot;&gt; 空链接 &lt;/a&gt;
4. 下载链接：&lt;a herf=&quot;xxx.zip/zip/rar(等压缩包形式)&gt; &lt;/a&gt;
5. 网页元素链接：&quot;元素&quot;代替&quot;文字&quot;
6. 锚点链接（重点）：点击链接到页面的某个位置
    1. 在 herf 属性中，设置属性值为#名字 
    （如： &lt;a herf=&quot;#two&quot;&gt; 第二集 &lt;/a&gt; ）
    2. 找到目标位置标签，添加id=名字
    （如： &lt;h3 id=&quot;two&quot;&gt; 第二季介绍 &lt;h3&gt; )    </code></pre><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><pre><code>1. &quot;&lt;!--&quot;开头      
   &quot;--&gt;&quot;结束
2. 快捷键：Ctrl + &quot;/&quot;</code></pre><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><pre><code>空格: &amp;nbsp;
&quot;&lt;&quot;: &amp;lt;
&quot;&lt;&quot;: &amp;gt;</code></pre><h2 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h2><pre><code>&lt;table&gt;    -------&gt;  定义单元格的标签
    &lt;tr&gt; -------&gt;  行
        &lt;td&gt; 单元格内的文字 &lt;/td&gt; -------&gt;  单元格
        ......        
    &lt;/tr&gt;        
    ......
&lt;/table&gt;</code></pre><p><img src="https://ae01.alicdn.com/kf/H5b06504643f6480583333bbbd845d5948.png" alt></p>
<h3 id="表头单元格"><a href="#表头单元格" class="headerlink" title="表头单元格"></a>表头单元格</h3><pre><code>&lt;table&gt;    
    &lt;tr&gt; 
        &lt;th&gt; 表头 &lt;/th&gt;  （加粗+居中）
        &lt;td&gt; 表格内容 &lt;/td&gt;
        &lt;td&gt; 表格内容 &lt;/td&gt; 
        &lt;td&gt; 表格内容 &lt;/td&gt;           
    &lt;/tr&gt;        
    ......
&lt;/table&gt;</code></pre><h3 id="表格属性-（不常用，之后用css，写在table中）"><a href="#表格属性-（不常用，之后用css，写在table中）" class="headerlink" title="表格属性 （不常用，之后用css，写在table中）"></a>表格属性 （不常用，之后用css，写在table中）</h3><pre><code>1. align--对齐        left     center     right
                       左       中心        右

2. border--边框      1    或    0
                    有       无（默认）

3. cellpadding--内容和边框的距离
4. cellspacing--单元格和单元格的距离
5. width--设置宽度
6. height--设置高度</code></pre><h3 id="表格结构标签"><a href="#表格结构标签" class="headerlink" title="表格结构标签"></a>表格结构标签</h3><pre><code>1.头部区域 &lt;thead&gt; (一定要有&lt;tr&gt;标签)
2.主体区域 &lt;tbody&gt;
注：都在&lt;table&gt;标签中</code></pre><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><p>方式：</p>
<pre><code>1. 跨行 rowspan = &quot;合并单元格的个数&quot;
2. 跨列 colspan = &quot;合并单元格的个数&quot;</code></pre><p><img src="https://ae01.alicdn.com/kf/Hf57ba1f2f8114f8aa0baa5f668ed15a2d.png" alt></p>
<p>目标单元格：</p>
<pre><code>跨行：最上侧
跨列：最左侧    </code></pre><p><img src="https://ae01.alicdn.com/kf/Hf673019f0584407fbe952da89efa9c40B.png" alt></p>
<p>步骤：</p>
<pre><code>1. 先确定 跨行 或 跨列 
2. 找到目标单元格，写合并方式
（如： &lt;td colspan =&quot;2&quot;&gt; &lt;/td&gt;）
3. 删除多的单元格</code></pre><h2 id="列表标签-（用于布局页面）"><a href="#列表标签-（用于布局页面）" class="headerlink" title="列表标签 （用于布局页面）"></a>列表标签 （用于布局页面）</h2><h3 id="无序列表-（重点）"><a href="#无序列表-（重点）" class="headerlink" title="无序列表 （重点）"></a>无序列表 （重点）</h3><pre><code>1. &lt;ul&gt; 中只放 &lt;li&gt;
2. &lt;li&gt; 中可以放任何元素

&lt;ul&gt;
    &lt;li&gt;.....&lt;/li&gt;
    &lt;li&gt;.....&lt;/li&gt;
    &lt;li&gt;.....&lt;/li&gt;
&lt;/ul&gt;

注：拥有自己的样式属性，之后用css改</code></pre><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code>1. &lt;or&gt; 中只放 &lt;li&gt;
2. &lt;li&gt; 中可以放任何元素 

&lt;or&gt;
    &lt;li&gt; 列表项1 &lt;/li&gt;
    &lt;li&gt; 列表项2 &lt;/li&gt;
    &lt;li&gt; 列表项3 &lt;/li&gt;
&lt;/or&gt;

注：拥有自己的样式属性，之后用css改</code></pre><h3 id="自定义列表-（重点）"><a href="#自定义列表-（重点）" class="headerlink" title="自定义列表 （重点）"></a>自定义列表 （重点）</h3><pre><code>&lt;dl&gt;
    &lt;dt&gt; 大哥 &lt;/dt&gt;
    &lt;dt&gt; 小弟 &lt;/dt&gt; -----&gt; 小弟用于解释大哥
    &lt;dt&gt; 小弟 &lt;/dt&gt;
&lt;/dl&gt;

注：
1. 一个 &lt;dt&gt; 可以对应多个 &lt;dd&gt;
2. &lt;dt&gt; 与 &lt;dd&gt; 的个数都无限制</code></pre><p><img src="https://ae01.alicdn.com/kf/H5dfbff0aa4634ef5b027bdf9a6c330bf2.png" alt></p>
<h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><ol>
<li><p>何时用自定义列表，何时用无序列表</p>
<p> a. 使用自定义列表<br><img src="https://ae01.alicdn.com/kf/Haa524fcf7cea40c398fa281c1effa6f9E.png" alt><br> b. 使用无序列表</p>
</li>
</ol>
<p><img src="https://ae01.alicdn.com/kf/H78900ce09eed423186fe0cf524980bb3y.png" alt></p>
<p>2.格式</p>
<p>无序列表：</p>
<pre><code>&lt;ul&gt;
    &lt;li&gt;.....&lt;/li&gt;
    &lt;li&gt;.....&lt;/li&gt;
    &lt;li&gt;.....&lt;/li&gt;
&lt;/ul&gt;</code></pre><p>自定义列表：</p>
<pre><code>&lt;dl&gt;
    &lt;dt&gt;.....&lt;/dt&gt;
    &lt;dt&gt;.....&lt;/dt&gt;
    &lt;dt&gt;..... &lt;/dt&gt;
&lt;/dl&gt;</code></pre><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><p><img src="https://ae01.alicdn.com/kf/Hd2f2b4bdafea4c3dbc92a73df3ceba2b6.png" alt></p>
<h3 id="表单域-lt-form-gt"><a href="#表单域-lt-form-gt" class="headerlink" title="表单域  &lt; form &gt;"></a>表单域  &lt; form &gt;</h3><p>把区域中的表单元素送给服务器</p>
<pre><code>&lt;form action=&quot;url地址&quot; methon=&quot;提交方式&quot; name=&quot;表单名称&quot;&gt;
                       [ get / post ]   [指定表单的名称]
    各种表单控件

&lt;/from&gt;</code></pre><h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><h4 id="lt-input-gt-输入"><a href="#lt-input-gt-输入" class="headerlink" title="&lt; input &gt; 输入"></a>&lt; input &gt; 输入</h4><pre><code>&lt;input type=&quot;属性值&quot; /&gt;

注：1.单标签  2.不同属性值对应不同的控件</code></pre><p>属性值：</p>
<pre><code>1. text-文本框      用户可以在里面输入任何文字
2. password-密码框     用户看不见输入的密码
3. radio-单选按钮     可以实现多选一
4. checkbox-复选框     可以实现多选
5. submi-提交按钮     把表单form里面的表单元素里面的值提交给后台服务器
6. reset-重置按钮     可以还原表单元素初始的默认状态
7. botton-普通按钮     后期可以结合js搭配使用
8. file-文件域     选择文件按钮，上传文件时使用</code></pre><p><strong>注意：</strong></p>
<pre><code>1. name-表单元素名字，多个单选按钮拥有相同名字时，可以实现单选一
   （单选框和复选框，选项的name的值要相同）
2. value-表单元素的值
   （只能在text中显示，只能后台人员使用）
3. checked-打开时默认选中：checked=&quot;checked&quot;
   （单选框和复选框中设置）
4. maxlength-输出字符字数最大值</code></pre><h4 id="lt-label-gt-标签-（为-lt-input-gt-元素定义标签）"><a href="#lt-label-gt-标签-（为-lt-input-gt-元素定义标签）" class="headerlink" title="&lt; label &gt;标签  （为&lt; input &gt;元素定义标签）"></a>&lt; label &gt;标签  （为&lt; input &gt;元素定义标签）</h4><p>自动将光标撞到或者选择到对应的元素上</p>
<pre><code>&lt;label for=&quot;sex&quot; &gt; 男 &lt;/label&gt;

&lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;sex&quot;&gt;</code></pre><h4 id="lt-select-gt-下拉表单元素"><a href="#lt-select-gt-下拉表单元素" class="headerlink" title="&lt; select &gt; 下拉表单元素"></a>&lt; select &gt; 下拉表单元素</h4><pre><code>&lt;select&gt; 
    &lt;option&gt;   &lt;/option&gt;
    &lt;option&gt;   &lt;/option&gt;
&lt;/select&gt;</code></pre><p>注意：</p>
<ol>
<li>&lt; select &gt; 中至少包含一对 &lt; option &gt;</li>
<li>在 &lt; option &gt; 中定义 checked=”checked” 时，当前项则为默认选择项</li>
</ol>
<h4 id="lt-textarea-gt-文本域"><a href="#lt-textarea-gt-文本域" class="headerlink" title="&lt; textarea &gt; 文本域"></a>&lt; textarea &gt; 文本域</h4><p>定义多行文本输入</p>
<pre><code>&lt;textarea  rows=&quot;可以显示的行数&quot;  role=&quot;可以显示的行数&quot;&gt;</code></pre><hr>
<p>本文参考：<br><a href="https://www.bilibili.com/video/BV14J4114768?p=1">2019年黑马程序员前端入门视频教程 HTML5+CSS3</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>Html</tag>
      </tags>
  </entry>
  <entry>
    <title>Mrkdown使用指南</title>
    <url>/2019/12/02/Mrkdown%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="一、Makedown-标题"><a href="#一、Makedown-标题" class="headerlink" title="一、Makedown 标题"></a>一、Makedown 标题</h1><h2 id="1-使用-和-标记一级和二级标题"><a href="#1-使用-和-标记一级和二级标题" class="headerlink" title="1. 使用 = 和 - 标记一级和二级标题"></a>1. 使用 = 和 - 标记一级和二级标题</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220358.jpg" alt="(1)" style="zoom:80%;">

<h2 id="2-使用-号标记"><a href="#2-使用-号标记" class="headerlink" title="2. 使用 # 号标记"></a>2. 使用 # 号标记</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220409.jpg" alt="(2)" style="zoom:80%;">

<a id="more"></a>



<h1 id="二、Markdown-段落格式"><a href="#二、Markdown-段落格式" class="headerlink" title="二、Markdown 段落格式"></a>二、Markdown 段落格式</h1><h2 id="1-Markdown-段落"><a href="#1-Markdown-段落" class="headerlink" title="1.Markdown 段落"></a>1.Markdown 段落</h2><p>Markdown<br>段落没有特殊的格式，可以编写文字。段落的换行使用两个以上空格加上回车,也可以在段落后面使用一个空行来表示重新开始一个段落。</p>
<h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220418.jpg" alt="(3)" style="zoom:80%;">

<h2 id="3-分隔线"><a href="#3-分隔线" class="headerlink" title="3.分隔线"></a>3.分隔线</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220421.jpg" alt="(4)" style="zoom:80%;">

<h2 id="4-删除线"><a href="#4-删除线" class="headerlink" title="4.删除线"></a>4.删除线</h2><p>在文字的两端加上两个波浪线 ~~ 即可</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220426.jpg" alt="(5)" style="zoom:80%;">

<h2 id="5-下划线"><a href="#5-下划线" class="headerlink" title="5.下划线"></a>5.下划线</h2><p>通过 HTML 的 &lt;u&gt; 标签来实现：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220430.jpg" alt="(6)" style="zoom:80%;">

<h2 id="6-脚注"><a href="#6-脚注" class="headerlink" title="6.脚注"></a>6.脚注</h2><p>脚注是对文本的补充说明，格式：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220437.jpg" alt="(7)" style="zoom:80%;">



<h1 id="三、Markdown-列表"><a href="#三、Markdown-列表" class="headerlink" title="三、Markdown 列表"></a>三、Markdown 列表</h1><h2 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="1.无序列表"></a>1.无序列表</h2><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220442.jpg" alt="(8)" style="zoom: 67%;">

<h2 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="2.有序列表"></a>2.有序列表</h2><p>有序列表使用数字并加上 . 号来表示，如：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220448.jpg" alt="(9)" style="zoom:80%;">

<h2 id="3-嵌套结构"><a href="#3-嵌套结构" class="headerlink" title="3.嵌套结构"></a>3.嵌套结构</h2><p>列表嵌套只需在子列表中的选项添加四个空格即可：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220453.jpg" alt="(10)" style="zoom:80%;">



<h1 id="四、Markdown-区块"><a href="#四、Markdown-区块" class="headerlink" title="四、Markdown 区块"></a>四、Markdown 区块</h1><p>Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220501.jpg" alt="(11)" style="zoom:80%;">

<p>嵌套用法：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220505.jpg" alt="(12)" style="zoom:80%;">

<h2 id="1-区块中使用列表"><a href="#1-区块中使用列表" class="headerlink" title="1.区块中使用列表"></a>1.区块中使用列表</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220510.jpg" alt="(13)" style="zoom: 80%;">

<h2 id="2-列表中使用区块"><a href="#2-列表中使用区块" class="headerlink" title="2.列表中使用区块"></a>2.列表中使用区块</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220516.jpg" alt="(14)" style="zoom:80%;">



<h1 id="五、Markdown代码"><a href="#五、Markdown代码" class="headerlink" title="五、Markdown代码"></a>五、Markdown代码</h1><h2 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h2><p>代码段落上的一个函数或片段的代码可以用反引号把它包起来（`）</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220521.jpg" alt="(15)" style="zoom:80%;">

<h2 id="2-代码区块"><a href="#2-代码区块" class="headerlink" title="2.代码区块"></a>2.代码区块</h2><p>代码区块使用 4 个空格或者一个制表符（Tab 键）, 也可以用 ```<br>包裹一段代码，并指定一种语言：</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220527.jpg" alt="(16)" style="zoom:80%;">



<h1 id="六、Markdown-图片"><a href="#六、Markdown-图片" class="headerlink" title="六、Markdown 图片"></a>六、Markdown 图片</h1><h2 id="1-本地图片"><a href="#1-本地图片" class="headerlink" title="1.本地图片"></a>1.本地图片</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220532.jpg" alt="(17)" style="zoom:80%;">

<p>开头一个感叹号 !</p>
<p>接着一个方括号，里面放上图片的替代文字</p>
<p>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’<br>属性的文字。</p>
<h2 id="2-网络图片"><a href="#2-网络图片" class="headerlink" title="2.网络图片"></a>2.网络图片</h2><p>这个链接用 1 作为网址变量 [RUNOOB][1].</p>
<p>然后在文档的结尾位变量赋值（网址）</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220538.jpg" alt="(18)" style="zoom:80%;">



<h1 id="七、Markdown-表格"><a href="#七、Markdown-表格" class="headerlink" title="七、Markdown 表格"></a>七、Markdown 表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。</p>
<h2 id="1-语法格式"><a href="#1-语法格式" class="headerlink" title="1.语法格式"></a>1.语法格式</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220542.jpg" alt="(19)" style="zoom: 67%;">

<h2 id="2-对齐方式"><a href="#2-对齐方式" class="headerlink" title="2.对齐方式"></a>2.对齐方式</h2><p>-: 设置内容和标题栏居右对齐。</p>
<p>:- 设置内容和标题栏居左对齐。</p>
<p>:-: 设置内容和标题栏居中对齐。</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214220548.jpg" alt="(20)" style="zoom:67%;">

<h2 id="3-注意事项"><a href="#3-注意事项" class="headerlink" title="3.注意事项"></a>3.注意事项</h2><p>1.“ — ” 前面要有一个空格</p>
<p>2.“ # ” 后面要有空格，才可以表示标题</p>
<h1 id="八、参考页面"><a href="#八、参考页面" class="headerlink" title="八、参考页面"></a>八、参考页面</h1><p><a href="https://www.runoob.com/markdown/md-tutorial.html">Markdown 教程</a></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>Github_page</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora图床教程--阿里云</title>
    <url>/2020/10/31/Typora%E5%9B%BE%E5%BA%8A%E6%95%99%E7%A8%8B-%E9%98%BF%E9%87%8C%E4%BA%91/</url>
    <content><![CDATA[<h1 id="一、下载Typora并安装插件"><a href="#一、下载Typora并安装插件" class="headerlink" title="一、下载Typora并安装插件"></a>一、下载Typora并安装插件</h1><h2 id="1-下载软件"><a href="#1-下载软件" class="headerlink" title="1.下载软件"></a>1.下载软件</h2><p>到官网下载对应版本软件（<a href="[https://typora.io](https://typora.io/)">Typora下载连接</a>）</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031143535666.png" alt="image-20201031143535666"></p>
<a id="more"></a>

<h2 id="2-安装插件"><a href="#2-安装插件" class="headerlink" title="2.安装插件"></a>2.安装插件</h2><blockquote>
<p>注：先在 “帮助“ - ”检查更新“ 中升级版本，确保可以使用</p>
</blockquote>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031144605201.png" alt="image-20201031144605201"></p>
<p>打开 ”文件“ – ”偏好设置“，选择”图像“进入见面，”插入图片时” 下拉菜单选择 “上传图片” </p>
<ul>
<li>使用 “配置文件” 的方法：“上传服务设定”选择  “PicGo-Core(command line)” ，点击 “下载并更新</li>
<li>使用 ”PicGo(app)“ 的方法：“上传服务设定” 选择 “PicGo-Core(app)”，选择app所在路径</li>
</ul>
<h1 id="二、注册配置阿里云"><a href="#二、注册配置阿里云" class="headerlink" title="二、注册配置阿里云"></a>二、注册配置阿里云</h1><h2 id="1-注册账号"><a href="#1-注册账号" class="headerlink" title="1.注册账号"></a>1.注册账号</h2><p>阿里云注册地址：<a href="https://www.aliyun.com/minisite/goods?source=5176.11533457&userCode=vnk7s0ek&type=copy">注册地址</a></p>
<h2 id="2-创建Bucket并购买资源包"><a href="#2-创建Bucket并购买资源包" class="headerlink" title="2.创建Bucket并购买资源包"></a>2.创建Bucket并购买资源包</h2><ul>
<li>首先，进入阿里云的控制台</li>
</ul>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031145741443.png" alt="image-20201031145741443"></p>
<ul>
<li>选择对象存贮Oss，并开通服务</li>
</ul>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031150324991.png" alt="image-20201031150324991" style="zoom: 50%;">

<ul>
<li><p>访问Bucket列表，并创建Bucket</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031150839928.png" alt="image-20201031150839928" style="zoom: 50%;">
</li>
<li><p>进入创建页面，填写 “名称” ，设置 “读写权限”  为 “公共读” （不然无法md文件无法读取）</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031151142718.png" alt="image-20201031151142718" style="zoom:50%;">



</li>
</ul>
<ul>
<li><p>购买资源包</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031152037377.png" alt="image-20201031152037377" style="zoom:50%;">

</li>
</ul>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031152107046.png" alt="image-20201031152107046"></p>
<h1 id="三、使用“配置文件”的方法（易错）"><a href="#三、使用“配置文件”的方法（易错）" class="headerlink" title="三、使用“配置文件”的方法（易错）"></a>三、使用“配置文件”的方法（易错）</h1><h2 id="1-配置-“配置文件”"><a href="#1-配置-“配置文件”" class="headerlink" title="1.配置 “配置文件”"></a>1.配置 “配置文件”</h2><p>打开 ”文件“ -  ”偏好设置“ ，选择 ”图像“ 进入见面，打开 “配置文件”，将下面的代码复制到 “配置文件” 中</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">"picBed"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"uploader"</span>: <span class="string">"aliyun"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"aliyun"</span>: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"accessKeyId"</span>: <span class="string">""</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"accessKeySecret"</span>: <span class="string">""</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"bucket"</span>: <span class="string">""</span>, <span class="comment">// 存储空间名</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"area"</span>: <span class="string">""</span>, <span class="comment">// 存储区域代号</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"path"</span>: <span class="string">"img/"</span>, <span class="comment">// 自定义存储路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="string">"customUrl"</span>: <span class="string">""</span>, <span class="comment">// 自定义域名，注意要加 http://或者 https://</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="string">"options"</span>: <span class="string">""</span> <span class="comment">// 针对图片的一些后缀处理参数 PicGo 2.2.0+ PicGo-Core 1.4.0+</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">"picgoPlugins"</span>: &#123;&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h2 id="2-参数调整"><a href="#2-参数调整" class="headerlink" title="2.参数调整"></a>2.参数调整</h2><ul>
<li><p>点击AcessKey管理，进入界面，创建一个新的AcessKey</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031152834944.png" alt="image-20201031152834944" style="zoom:50%;">

<p>复制 accessKeyId 和 accessKeySecret 到配置文件</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031153214391.png" alt="image-20201031153214391"></p>
</li>
</ul>
<ul>
<li><p>回到对象存贮Oss，进入新建的Bucket，将下图的 Bucket 和 area 填入配置文件</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031153824294.png" alt="image-20201031153824294"></p>
</li>
<li><p>其他的参数不需要配置，容易出错</p>
<blockquote>
<p>遇到问题： customUrl 设置吼出现无法读取图片的情况</p>
<p>解决方案： 删除 customUrl 后面的参数</p>
</blockquote>
<h2 id="3-验证是否成功"><a href="#3-验证是否成功" class="headerlink" title="3.验证是否成功"></a>3.验证是否成功</h2><p>回到Typora软件，进入 ”图像“ 界面 ，点击 ”验证图片上传选项“ ，如果如下图所示，则验证成功</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201031155452880.png" alt="image-20201031155452880" style="zoom: 33%;">



</li>
</ul>
<h1 id="四、使用”PicGo-app-“的方法"><a href="#四、使用”PicGo-app-“的方法" class="headerlink" title="四、使用”PicGo(app)“的方法"></a>四、使用”PicGo(app)“的方法</h1><h2 id="1-下载PicGo软件"><a href="#1-下载PicGo软件" class="headerlink" title="1.下载PicGo软件"></a>1.下载PicGo软件</h2><p>GitHub地址：<a href="https://github.com/Molunerfinn/PicGo">下载地址</a></p>
<h2 id="2-配置参数"><a href="#2-配置参数" class="headerlink" title="2. 配置参数"></a>2. 配置参数</h2><blockquote>
<p>与使用插件不同，使用软件需要使用<strong>添加用户</strong>的方式来配置accessKeyId 和 accessKeySecret （这个结论是报错后，在网上寻找解决方案后试验成功的，不一定准确）</p>
<p>更加推荐使用插件的方式，因为已经卸载软件，所以以下操作的步骤来自 <a href="https://blog.csdn.net/kai123wen/article/details/104027802">阿里云OSS PicGo 配置图床教程</a></p>
</blockquote>
<h3 id="添加用户步骤"><a href="#添加用户步骤" class="headerlink" title="添加用户步骤"></a>添加用户步骤</h3><ul>
<li>点击自己头像，然后选择访问控制</li>
</ul>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nLzIwMjAwMTE4MDk0NjM1LnBuZw" alt="img" style="zoom: 67%;">

<ul>
<li>点击用户，选择新建用户</li>
</ul>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nLzIwMjAwMTE4MDk0ODU1LnBuZw" alt="img" style="zoom: 50%;">

<ul>
<li><p>之后进行用户配置，注意要勾选<strong>编程访问</strong>，控制台密码登录可以不选择，登录名称，显示名称自己设定</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nLzIwMjAwMTE4MDk1MzA3LnBuZw" alt="img" style="zoom:50%;">
</li>
<li><p>确定后得到创建用户的信息，这里要记下AccessKey ID 和 AccessKeySecret，之后配置PICGO用到，因为这个界面关掉之后就不好找了，所以最好记在记事本里</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nLzIwMjAwMTE4MDk1NzI2LnBuZw" alt="img"></p>
</li>
<li><p>设置用户权限，使得用户只能访问OSS的服务。点击添加权限</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nL2ltYWdlLTIwMjAwMTE4MTAyMTAwMzk5LnBuZw" alt="img"></p>
</li>
<li><p>选择管理对象存储服务权限，点击确定</p>
</li>
</ul>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/aHR0cHM6Ly9nemhrZXZpbi1pbWFnZS5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vaW1nLzIwMjAwMTE4MTAyMTI4LnBuZw" alt="img" style="zoom:50%;">

<hr>
<blockquote>
<p>以下是<strong>附加内容</strong>与本文无关</p>
</blockquote>
<h1 id="五、右键新建中增加新建md文件"><a href="#五、右键新建中增加新建md文件" class="headerlink" title="五、右键新建中增加新建md文件"></a>五、右键新建中增加新建md文件</h1><p>新建一个txt文本文档,然后用记事本打开，输入以下代码，修改刚才哪个文件的后缀名为reg，双击使用它</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span></pre></td></tr><tr><td class="code"><pre><span class="line">[HKEY_CLASSES_ROOT\.md\ShellNew]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&quot;NullFile&quot;&#x3D;&quot;&quot;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&quot;FileName&quot;&#x3D;&quot;template.md&quot;</span></pre></td></tr></table></figure>

<h1 id="六、参考资料"><a href="#六、参考资料" class="headerlink" title="六、参考资料"></a>六、参考资料</h1><ol>
<li><a href="https://zhuanlan.zhihu.com/p/138878534">最强markdown编辑器typora图床教程- 阿里云版</a></li>
<li><a href="https://blog.csdn.net/kai123wen/article/details/104027802">阿里云OSS PicGo 配置图床教程</a></li>
<li><a href="https://blog.csdn.net/yetugeng/article/details/105196700">Windows右键新建中增加新建md文件</a></li>
</ol>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>a标签去除默认样式</title>
    <url>/2020/11/24/a%E6%A0%87%E7%AD%BE%E5%8E%BB%E9%99%A4%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="一、初始的链接"><a href="#一、初始的链接" class="headerlink" title="一、初始的链接"></a>一、初始的链接</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h1 id="二、正常的未被访问过的链接"><a href="#二、正常的未被访问过的链接" class="headerlink" title="二、正常的未被访问过的链接"></a>二、正常的未被访问过的链接</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h1 id="三、已经访问过的链接"><a href="#三、已经访问过的链接" class="headerlink" title="三、已经访问过的链接"></a>三、已经访问过的链接</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<a id="more"></a>

<h1 id="四、-鼠标划过-停留-的链接"><a href="#四、-鼠标划过-停留-的链接" class="headerlink" title="四、 鼠标划过(停留)的链接"></a>四、 鼠标划过(停留)的链接</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h1 id="五、-正在点击的链接"><a href="#五、-正在点击的链接" class="headerlink" title="五、 正在点击的链接"></a>五、 正在点击的链接</h1><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-decoration</span>: none;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h1 id="六、-参考"><a href="#六、-参考" class="headerlink" title="六、 参考"></a>六、 参考</h1><p><a href="https://www.cnblogs.com/PHP0222wangdong/p/11360624.html"><code>&lt;a&gt;</code> 标签去除默认样式</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>el-if、el-else-if、el-else</title>
    <url>/2020/11/11/el-if%E3%80%81el-else-if%E3%80%81el-else/</url>
    <content><![CDATA[<h1 id="一、v-if-与-v-else"><a href="#一、v-if-与-v-else" class="headerlink" title="一、v-if 与 v-else"></a>一、v-if 与 v-else</h1><p><strong>v-if为真时，显示v-if的内容，否则显示v-else的内容</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h2 v-if&#x3D;&quot;true&quot;&gt;v-if&lt;&#x2F;h2&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;h2 v-else&gt;v-else&lt;&#x2F;h2&gt;</span></pre></td></tr></table></figure>

<blockquote>
<p>v-else 元素必须紧跟在带 v-if 或者 v-else-if 的元素的后面，否则它将不会被识别。</p>
</blockquote>
<br>

<h1 id="二、v-else-if"><a href="#二、v-else-if" class="headerlink" title="二、v-else-if"></a>二、v-else-if</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div v-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;A&#39;&quot;&gt; A &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;div v-else-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;B&#39;&quot;&gt; B &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;div v-else-if&#x3D;&quot;type &#x3D;&#x3D;&#x3D; &#39;C&#39;&quot;&gt; C &lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;div v-else&gt;</span></pre></td></tr></table></figure>

<blockquote>
<p>类似于 v-else，v-else-if 也必须紧跟在带 v-if 或者 v-else-if 的元素之后</p>
</blockquote>
]]></content>
      <categories>
        <category>VUE整理</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>VUE</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>img和div之间有间隙的原因及解决方法</title>
    <url>/2020/11/24/img%E5%92%8Cdiv%E4%B9%8B%E9%97%B4%E6%9C%89%E9%97%B4%E9%9A%99%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><br>

<p>问题：display:inline-block布局的元素在chrome<strong>下会出现几像素的间隙</strong></p>
<p>原因：div 中 存在 img标签，由于img标签的 <strong>display:inline-block</strong> 属性。</p>
<blockquote>
<p><strong>inline-block的“换行符/空格间隙问题”：</strong></p>
<p>​    在编辑器里写代码的时候，同级别的标签不写在同一行，以保持代码的整齐可读性。即inline-block布局的元素在编辑器里不在同一行，即存在换行符，当inline-block元素间有空格或是换行则会产生间隙。</p>
</blockquote>
<h1 id="二、解决方法"><a href="#二、解决方法" class="headerlink" title="二、解决方法"></a>二、解决方法</h1><h2 id="1-把img标签的display属性改成block："><a href="#1-把img标签的display属性改成block：" class="headerlink" title="1. 把img标签的display属性改成block："></a>1. 把img标签的display属性改成block：</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attribute">dispaly</span>:block;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="2-把div中的字体大小设为0"><a href="#2-把div中的字体大小设为0" class="headerlink" title="2. 把div中的字体大小设为0"></a>2. 把div中的字体大小设为0</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attribute">font-size</span>:<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>



<h2 id="3-修改img的vertical-align属性"><a href="#3-修改img的vertical-align属性" class="headerlink" title="3. 修改img的vertical-align属性"></a>3. 修改img的vertical-align属性</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">vertical-align</span>:buttom; &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">vertical-align</span>:middle; &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">vertical-align</span>:top; &#125;</span></pre></td></tr></table></figure>



<h1 id="三、参考"><a href="#三、参考" class="headerlink" title="三、参考"></a>三、参考</h1><p><a href="https://www.cnblogs.com/vanstrict/p/4961300.html">div之间有间隙以及img和div之间有间隙的原因及解决方法</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora上传图片时,文件以时间戳命名</title>
    <url>/2020/12/14/Typora%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E6%97%B6-%E6%96%87%E4%BB%B6%E4%BB%A5%E6%97%B6%E9%97%B4%E6%88%B3%E5%91%BD%E5%90%8D/</url>
    <content><![CDATA[<h1 id="一、查询之前安装的PicGo执行路径"><a href="#一、查询之前安装的PicGo执行路径" class="headerlink" title="一、查询之前安装的PicGo执行路径"></a>一、查询之前安装的PicGo执行路径</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214170157.png" alt="image-20201214170155882" style="zoom: 67%;">

<a id="more"></a>

<h1 id="二、安装插件"><a href="#二、安装插件" class="headerlink" title="二、安装插件"></a>二、安装插件</h1><p>进入cmd输入代码安装插件（super-prefix插件 —— 用于上传图片时能自动使用时间戳重命名）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd C:\Users\Administrator\AppData\Roaming\Typora\picgo\win64</span></pre></td></tr><tr><td class="code"><pre><span class="line">.\picgo.exe install super-prefix</span></pre></td></tr></table></figure>



<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214170742.png" alt="image-20201214170740861">



<h1 id="三、修改配置文件"><a href="#三、修改配置文件" class="headerlink" title="三、修改配置文件"></a>三、修改配置文件</h1><figure class="highlight"><table><tr><td class="code"><pre><span class="line">"picgoPlugins": &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    "picgo-plugin-super-prefix": true</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;, // 为插件预留</span></pre></td></tr><tr><td class="code"><pre><span class="line">  "picgo-plugin-super-prefix": &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    "fileFormat": "YYYYMMDDHHmmss"</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125; //super-prefix插件配置</span></pre></td></tr></table></figure>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/20201214171510.png" alt="image-20201214171508681" style="zoom:80%;">



<h1 id="四、参考"><a href="#四、参考" class="headerlink" title="四、参考"></a>四、参考</h1><p><a href="https://blog.csdn.net/in_the_road/article/details/105733292">Typora自动上传图片配置，集成PicGo-Core，文件以时间戳命名</a></p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>js获取对象属性值的2种方法</title>
    <url>/2020/11/25/js%E8%8E%B7%E5%8F%96%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%842%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="第一种：通过-的方式获取"><a href="#第一种：通过-的方式获取" class="headerlink" title="第一种：通过 . 的方式获取"></a>第一种：通过 . 的方式获取</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201125140648489.png" alt="image-20201125140648489"></p>
<h1 id="第二种：通过-的方式获取"><a href="#第二种：通过-的方式获取" class="headerlink" title="第二种：通过 [ ] 的方式获取"></a>第二种：通过 [ ] 的方式获取</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201125141041462.png" alt="image-20201125141041462"></p>
<blockquote>
<p>注意：用数组下标获取值的方式获取属性，记得要给属性加引号</p>
</blockquote>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.cnblogs.com/tu-0718/p/13218006.html">js获取对象属性值的2种方法</a></p>
]]></content>
      <categories>
        <category>日常学习</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-router模块</title>
    <url>/2020/11/24/vue-router%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<h1 id="一、Vue路由传参query和params的区别"><a href="#一、Vue路由传参query和params的区别" class="headerlink" title="一、Vue路由传参query和params的区别"></a>一、Vue路由传参query和params的区别</h1><h2 id="1-区别"><a href="#1-区别" class="headerlink" title="1. 区别"></a>1. 区别</h2><ol>
<li>query使用path和name传参跳转都可以，而params只能使用name传参跳转</li>
<li>传参跳转页面时，query和params不需要在路由上配参数就能在新的页面获取到参数</li>
<li>但params不在路由配参数的话，当用户刷新当前页面的时候，参数就会消失。</li>
</ol>
<h2 id="2-样例"><a href="#2-样例" class="headerlink" title="2. 样例"></a>2. 样例</h2><h3 id="2-1-query传参"><a href="#2-1-query传参" class="headerlink" title="2.1 query传参"></a>2.1 query传参</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;在方法里面写 也可以用name</span></pre></td></tr><tr><td class="code"><pre><span class="line">this.$router.push(&#123; path:&#39;&#x2F;search&#39;, query: &#123; categoryId: this.categoryId &#125;&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; router-link里面的to</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123;path:&#39;&#x2F;search&#39;,query: &#123;categoryId: item.categoryId&#125;&#125;&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">接收参数：this.categoryId &#x3D; this.$route.query.categoryId ;</span></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="2-2-params传参"><a href="#2-2-params传参" class="headerlink" title="2.2 params传参"></a>2.2 params传参</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;在方法里面写</span></pre></td></tr><tr><td class="code"><pre><span class="line">this.$router.push(&#123; name::&#39;&#x2F;search&#39;, query: &#123; categoryId: this.categoryId &#125;&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; router-link里面的to</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123;name::&#39;&#x2F;search&#39;,query: &#123;categoryId: item.categoryId&#125;&#125;&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">接收参数：this.categoryId &#x3D; this.$route.params.categoryId ;</span></pre></td></tr></table></figure>

<h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><p><a href="https://blog.csdn.net/Brian_Jing/article/details/100987080">Vue路由传参query和params的区别</a></p>
<br>

<h1 id="二、Vue-详解设置路由导航的两种方法"><a href="#二、Vue-详解设置路由导航的两种方法" class="headerlink" title="二、Vue-详解设置路由导航的两种方法"></a>二、Vue-详解设置路由导航的两种方法</h1><h2 id="1-方法"><a href="#1-方法" class="headerlink" title="1. 方法"></a>1. 方法</h2><h3 id="1-1-使用-lt-router-link-to-quot-quot-gt"><a href="#1-1-使用-lt-router-link-to-quot-quot-gt" class="headerlink" title="1.1 使用&lt;router-link :to=&quot;...&quot;&gt;"></a>1.1 使用<code>&lt;router-link :to=&quot;...&quot;&gt;</code></h3><p><strong>to里的值可以是一个字符串路径，或者一个描述地址的对象</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 字符串</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link to&#x3D;&quot;apple&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 对象</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; path:&#39;apple&#39; &#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 命名路由</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; name:&#39;applename&#39; &#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 直接路由带查询参数query，地址栏变成 &#x2F;apple?color&#x3D;red</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; path:&#39;apple&#39;, query: &#123; color:&#39;red&#39; &#125;&#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 命名路由带查询参数query，地址栏变成&#x2F;apple?color&#x3D;red</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; name:&#39;applename&#39;, query: &#123; color:&#39;red&#39; &#125;&#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 直接路由带路由参数params，params 不生效，如果提供了 path，params 会被忽略</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; path:&#39;apple&#39;, params: &#123; color:&#39;red&#39; &#125;&#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 命名路由带路由参数params，地址栏是&#x2F;apple&#x2F;red</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; name:&#39;applename&#39;, params: &#123; color:&#39;red&#39; &#125;&#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr></table></figure>

<h3 id="1-2-router-push-…-方法"><a href="#1-2-router-push-…-方法" class="headerlink" title="1.2 router.push(…)方法"></a>1.2 router.push(…)方法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 字符串</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(<span class="string">'apple'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">path</span>:<span class="string">'apple'</span> &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 命名路由</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">name</span>: <span class="string">'applename'</span> &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 直接路由带查询参数query，地址栏变成 /apple?color=red</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">path</span>: <span class="string">'apple'</span>, <span class="attr">query</span>: &#123; <span class="attr">color</span>: <span class="string">'red'</span> &#125;&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 命名路由带查询参数query，地址栏变成/apple?color=red</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">name</span>: <span class="string">'applename'</span>, <span class="attr">query</span>: &#123; <span class="attr">color</span>: <span class="string">'red'</span> &#125;&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 直接路由带路由参数params，params 不生效，如果提供了 path，params 会被忽略</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">path</span>:<span class="string">'applename'</span>, <span class="attr">params</span>:&#123; <span class="attr">color</span>: <span class="string">'red'</span> &#125;&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 命名路由带路由参数params，地址栏是/apple/red</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; <span class="attr">name</span>:<span class="string">'applename'</span>, <span class="attr">params</span>:&#123; <span class="attr">color</span>: <span class="string">'red'</span> &#125;&#125;)</span></pre></td></tr></table></figure>



<h2 id="2-注意事项"><a href="#2-注意事项" class="headerlink" title="2. 注意事项"></a>2. 注意事项</h2><h3 id="2-1-关于带参数的路由"><a href="#2-1-关于带参数的路由" class="headerlink" title="2.1 关于带参数的路由"></a>2.1 关于带参数的路由</h3><blockquote>
<p><strong>查询参数query：</strong></p>
<p>无论是直接路由“path” 还是命名路由“name”，带查询参数query，地址栏会变成“/url?查询参数名：查询参数值“;</p>
</blockquote>
<blockquote>
<p><strong>查询参数params：</strong></p>
<p>直接路由“path” 带路由参数params  params 不生效;<br>命名路由“name” 带路由参数params 地址栏保持是“/url/路由参数值”;</p>
</blockquote>
<h3 id="2-2-设置路由map里的path值"><a href="#2-2-设置路由map里的path值" class="headerlink" title="2.2 设置路由map里的path值"></a>2.2 <strong>设置路由map里的path值</strong></h3><p> 带路由参数params时，路由map里的path应该写成: path:’/apple/:color’ ;<br> 带查询参数query时，路由map里的path应该写成: path:’/apple’ ；</p>
<h3 id="2-3-获取参数方法"><a href="#2-3-获取参数方法" class="headerlink" title="2.3 获取参数方法"></a>2.3 获取参数方法</h3><p>在组件中：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;&#123;$route.params.color&#125;&#125;</span></pre></td></tr></table></figure>

<p>在js里：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this.$route.params.color</span></pre></td></tr></table></figure>



<h2 id="3-参考-1"><a href="#3-参考-1" class="headerlink" title="3. 参考"></a>3. 参考</h2><p><a href="https://www.cnblogs.com/superlizhao/p/8527317.html">Vue-详解设置路由导航的两种方法</a></p>
<br>

<h1 id="三、命名路由"><a href="#三、命名路由" class="headerlink" title="三、命名路由"></a>三、命名路由</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p><strong>给一个路由命一个唯一的名称，然后跳转调用这个名称即可</strong></p>
<h2 id="2-样例-1"><a href="#2-样例-1" class="headerlink" title="2. 样例"></a>2. 样例</h2><p>（1）在src/router/index.js中加一个带name的路由</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    path: &#39;one&#39;, &#x2F;&#x2F; 子页面1</span></pre></td></tr><tr><td class="code"><pre><span class="line">    name: &#39;one&#39;, &#x2F;&#x2F; 路由名称-命名路由</span></pre></td></tr><tr><td class="code"><pre><span class="line">    component: One &#x2F;&#x2F; 页面组件</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<p>（2）在src/component/Home.vue页面中调用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; template跳转调用</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123; name: &#39;one&#39; &#125;&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	子页面1</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; router.push函数跳转调用</span></pre></td></tr><tr><td class="code"><pre><span class="line">router.push(&#123; name: &#39;user&#39; &#125;&#125;)</span></pre></td></tr></table></figure>



<h2 id="3-参考-2"><a href="#3-参考-2" class="headerlink" title="3. 参考"></a>3. 参考</h2><p><a href="https://blog.51cto.com/4547985/2390802">vue-router之命名路由-命名视图-重定向-别名（五）</a></p>
<h1 id="四、使用vue-router"><a href="#四、使用vue-router" class="headerlink" title="四、使用vue-router"></a>四、使用vue-router</h1><h2 id="1-三要素"><a href="#1-三要素" class="headerlink" title="1. 三要素"></a>1. 三要素</h2><p>vue-router有三个要素：<strong>路由map、路由视图、路由导航</strong>。</p>
<blockquote>
<ol>
<li>路由map指路由与组件的映射关系；</li>
<li>路由视图指路由映射对应组件的渲染位置；</li>
<li>路由导航指可以使地址栏发生变化的导航链接。</li>
</ol>
</blockquote>
<h2 id="2-路由map"><a href="#2-路由map" class="headerlink" title="2. 路由map"></a>2. 路由map</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Vue from &#39;vue&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">import App from &#39;.&#x2F;App&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;1、在入口文件main.js里引入</span></pre></td></tr><tr><td class="code"><pre><span class="line">import VRouter from &#39;vue-router&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Vue.config.productionTip &#x3D; false</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;2、用全局方法use()来注册使用vue-router</span></pre></td></tr><tr><td class="code"><pre><span class="line">Vue.use(VRouter);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;4、实例化全局router  </span></pre></td></tr><tr><td class="code"><pre><span class="line">let router&#x3D;new VRouter(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &#x2F;&#x2F;以下是路由map</span></pre></td></tr><tr><td class="code"><pre><span class="line">    routes:[</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            path:&#39;&#x2F;apple&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            component:Apple</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            path:&#39;&#x2F;banana&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">            component:Banana</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    ]</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">new Vue(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  el: &#39;#app&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  router,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F;3、注册组件</span></pre></td></tr><tr><td class="code"><pre><span class="line">  components: &#123; App,VRouter &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  template: &#39;&lt;App&#x2F;&gt;&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr></table></figure>



<h2 id="3-路由视图"><a href="#3-路由视图" class="headerlink" title="3. 路由视图"></a>3. 路由视图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;router-view&gt;&lt;&#x2F;router-view&gt;</span></pre></td></tr></table></figure>



<h2 id="4-路由导航"><a href="#4-路由导航" class="headerlink" title="4. 路由导航"></a>4. 路由导航</h2><h3 id="4-1-使用-lt-router-link-gt-创建-a-标签来定义导航链接"><a href="#4-1-使用-lt-router-link-gt-创建-a-标签来定义导航链接" class="headerlink" title="4.1 使用&lt;router-link&gt; 创建 a 标签来定义导航链接"></a>4.1 使用<code>&lt;router-link&gt;</code> 创建 a 标签来定义导航链接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123;path:&#39;apple&#39;&#125;&quot;&gt; to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;router-link :to&#x3D;&quot;&#123;path:&#39;banana&#39;&#125;&quot;&gt;to apple&lt;&#x2F;router-link&gt;</span></pre></td></tr></table></figure>

<h3 id="4-2-使用-router-push-方法"><a href="#4-2-使用-router-push-方法" class="headerlink" title="4.2 使用 router.push 方法"></a>4.2 使用 router.push 方法</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">router.push(&#123; path: &#39;apple&#39; &#125;)</span></pre></td></tr></table></figure>

<p>注：点击 <code>&lt;router-link :to=&quot;...&quot;&gt;</code> 等同于调用 router.push(…)</p>
<h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><p><a href="https://www.cnblogs.com/superlizhao/p/8515640.html">Vue-初步了解vue-router的三要素：路由map 、路由视图、路由导航</a></p>
]]></content>
      <categories>
        <category>VUE整理</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>VUE</tag>
      </tags>
  </entry>
  <entry>
    <title>后端接口配置</title>
    <url>/2020/11/03/%E5%90%8E%E7%AB%AF%E6%8E%A5%E5%8F%A3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="一、安装MySql"><a href="#一、安装MySql" class="headerlink" title="一、安装MySql"></a>一、安装MySql</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p>镜像安装（zip），配置初始化的my.ini文件的文件，按照命令操作（管理员打开），</p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-45.png" alt="2020-11-10 0-45"></p>
<a id="more"></a>

<h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2.配置环境变量"></a>2.配置环境变量</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10 0-46.png" alt="2020-11-10 0-46" style="zoom:50%;">

<h1 id="二、安装Navicat，导入数据库"><a href="#二、安装Navicat，导入数据库" class="headerlink" title="二、安装Navicat，导入数据库"></a>二、安装Navicat，导入数据库</h1><h2 id="1-新建MySQL连接"><a href="#1-新建MySQL连接" class="headerlink" title="1.新建MySQL连接"></a>1.新建MySQL连接</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10 0-47.png" alt="2020-11-10 0-47" style="zoom: 50%;">

<h2 id="2-新建连接，导入sql文件"><a href="#2-新建连接，导入sql文件" class="headerlink" title="2.新建连接，导入sql文件"></a>2.新建连接，导入sql文件</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10 0-48.png" alt="2020-11-10 0-48" style="zoom:50%;">

<h1 id="三、运行api"><a href="#三、运行api" class="headerlink" title="三、运行api"></a>三、运行api</h1><p>在目标接口打开Git Bash，输入npm install下载需要的组件，输入$ node app.js运行api接口</p>
<hr>
<blockquote>
<p><strong>遇到问题：</strong>登入失败</p>
<p><strong>解决方案：</strong>修改D:\Vue\2020.10\vue_shop_api\config\default.json 文件里面的账号密码</p>
</blockquote>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10 0-49.png" alt="2020-11-10 0-49" style="zoom:80%;">

<h1 id="四、安装Postman检测接口"><a href="#四、安装Postman检测接口" class="headerlink" title="四、安装Postman检测接口"></a>四、安装Postman检测接口</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10 0-50.png" alt="2020-11-10 0-50" style="zoom:80%;">

<h1 id="五、参考资料"><a href="#五、参考资料" class="headerlink" title="五、参考资料"></a>五、参考资料</h1><p>1.<a href="https://www.cnblogs.com/winton-nfs/p/11524007.html">安装mysql教程</a></p>
]]></content>
      <categories>
        <category>Vue_Shop项目</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>后端</tag>
        <tag>数据库</tag>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title>开启MySQL常见问题</title>
    <url>/2020/11/06/%E5%BC%80%E5%90%AFMySQL%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h1><p><strong>问题描述：</strong></p>
<blockquote>
<p>在命令行输入 mysql -u root -p 登录mysql，返回”Can’t connect to MySQL server on localhost (10061)”错误</p>
</blockquote>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201105233916432.png" alt="image-20201105233916432"></p>
<p><strong>处理方式：</strong></p>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201105234201467.png" alt="image-20201105234201467"></p>
<a id="more"></a>

<h1 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h1><p><strong>问题描述：</strong></p>
<blockquote>
<p>在windos 的cmd下安装mysql，在mysql的bin目录下面执行： mysqld –install。</p>
<p>报错：Install/Remove of the Service Denied</p>
</blockquote>
<p><strong>处理方式：</strong></p>
<p>打开cmd.exe程序的时候选择“用管理员身份打开”。</p>
<h1 id="问题三"><a href="#问题三" class="headerlink" title="问题三"></a>问题三</h1><p><strong>问题描述：</strong></p>
<blockquote>
<p>打开Navicat 软件，点击数据库，报错：1045 Access denied for user ‘root’@’localhost’ (using password: YES)</p>
</blockquote>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/916611-20171108104341934-1669606114.png" alt="img"></p>
<p><strong>解决方式：</strong></p>
<p>右击”root“ - ”修改连接“，进行修改密码</p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201106002338078.png" alt="image-20201106002338078" style="zoom:50%;">





























]]></content>
      <categories>
        <category>Vue_Shop项目</category>
      </categories>
      <tags>
        <tag>VUE</tag>
        <tag>后端</tag>
        <tag>数据库</tag>
        <tag>MySql</tag>
      </tags>
  </entry>
  <entry>
    <title>积分商城（平台端）总结</title>
    <url>/2020/11/24/%E7%A7%AF%E5%88%86%E5%95%86%E5%9F%8E%EF%BC%88%E5%B9%B3%E5%8F%B0%E7%AB%AF%EF%BC%89%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="一、将积分基础设置改入到后台设置"><a href="#一、将积分基础设置改入到后台设置" class="headerlink" title="一、将积分基础设置改入到后台设置"></a>一、将积分基础设置改入到后台设置</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116093153205.png" alt="image-20201116093153205"></p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116102416954.png" alt="image-20201116102416954" style="zoom: 67%;">



<a id="more"></a>



<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116101951541.png" alt="image-20201116101951541"></p>
<h1 id="二、展开运算符"><a href="#二、展开运算符" class="headerlink" title="二、展开运算符"></a>二、展开运算符</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/Snipaste_2020-11-09_17-54-23.png" alt="Snipaste_2020-11-09_17-54-23"></p>
<h1 id="三、ref-和-ref"><a href="#三、ref-和-ref" class="headerlink" title="三、ref 和 $ref"></a>三、ref 和 $ref</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116101631105.png" alt="image-20201116101631105" style="zoom: 67%;">



<p>1、<strong>ref 需要在dom渲染完成后才会有</strong>，在使用的时候确保dom已经渲染完成。比如在生命周期 <strong>mounted(){} 钩子中调用</strong>，或者<strong>在 this.$nextTick(()=&gt;{}) 中调用</strong>。</p>
<p>2、如果ref 是循环出来的，<strong>有多个重名，那么ref的值会是一个数组</strong> ，此时要拿到单个的ref 只需要循环就可以了。</p>
<h2 id="例子"><a href="#例子" class="headerlink" title="例子 :"></a>例子 :</h2><h3 id="1-添加ref属性"><a href="#1-添加ref属性" class="headerlink" title="1.添加ref属性"></a>1.添加ref属性</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;h1 ref&#x3D;&quot;h1Ele&quot;&gt;这是H1&lt;&#x2F;h1&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;hello ref&#x3D;&quot;ho&quot;&gt;&lt;&#x2F;hello&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &lt;button @click&#x3D;&quot;getref&quot;&gt;获取H1元素&lt;&#x2F;button&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;div&gt;</span></pre></td></tr></table></figure>



<h3 id="2-获取注册过-ref-的所有组件或元素"><a href="#2-获取注册过-ref-的所有组件或元素" class="headerlink" title="2.获取注册过 ref 的所有组件或元素"></a>2.获取注册过 ref 的所有组件或元素</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        getref() &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          &#x2F;&#x2F; 表示从 $refs对象 中, 获取 ref 属性值为: h1ele DOM元素或组件</span></pre></td></tr><tr><td class="code"><pre><span class="line">           console.log(this.$refs.h1Ele.innerText);</span></pre></td></tr><tr><td class="code"><pre><span class="line">           this.$refs.h1ele.style.color &#x3D; &#39;red&#39;;&#x2F;&#x2F; 修改html样式</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line">          console.log(this.$refs.ho.msg);&#x2F;&#x2F; 获取组件数据</span></pre></td></tr><tr><td class="code"><pre><span class="line">          console.log(this.$refs.ho.test);&#x2F;&#x2F; 获取组件的方法</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr></table></figure>



<h1 id="四、表单验证函数"><a href="#四、表单验证函数" class="headerlink" title="四、表单验证函数"></a>四、表单验证函数</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116103351424.png" alt="image-20201116103351424" style="zoom:67%;">



<h1 id="五、表单重置函数"><a href="#五、表单重置函数" class="headerlink" title="五、表单重置函数"></a>五、表单重置函数</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201116103926570.png" alt="image-20201116103926570" style="zoom: 80%;">



<h1 id="六、服务器连接报错"><a href="#六、服务器连接报错" class="headerlink" title="六、服务器连接报错"></a>六、服务器连接报错</h1><br>

<blockquote>
<p>原因：连接的不是同一个内网</p>
</blockquote>
<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20201116141314.png" alt="微信图片_20201116141314"></p>
<h1 id="七、常用-的意义"><a href="#七、常用-的意义" class="headerlink" title="七、常用 $ 的意义"></a>七、常用 $ 的意义</h1><br>

<ul>
<li>this.$data :  vm上的数据</li>
<li>this.$watch :  监控</li>
<li>this.$el :  当前el元素</li>
<li>this.$set :  后加的属性实现响应式变化</li>
<li>this.$nextTick :  异步方法，等待渲染dom完成后来获取vm</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">let vm &#x3D; new Vue(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        el:&#39;#app&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        data:&#123;msg:&#39;hello&#39;,arr:[1,2,3]&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">        mounted()&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            this.$nextTick(()&#x3D;&gt;&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                console.log(vm);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;)</span></pre></td></tr></table></figure>



<h1 id="八、-emit的用法"><a href="#八、-emit的用法" class="headerlink" title="八、$emit的用法"></a>八、$emit的用法</h1><br>

<blockquote>
<p>父组件使用 <strong>props</strong> 把数据传给子组件。<br>子组件使用 <strong>$emit</strong> 触发父组件的自定义事件。</p>
</blockquote>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201117174623572.png" alt="image-20201117174623572" style="zoom:80%;">



<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201117174838597.png" alt="image-20201117174838597" style="zoom:80%;">



<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201117174940658.png" alt="image-20201117174940658" style="zoom:80%;">



<h1 id="九、修改测试Bug的环境"><a href="#九、修改测试Bug的环境" class="headerlink" title="九、修改测试Bug的环境"></a>九、修改测试Bug的环境</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120093830136.png" alt="image-20201120093830136" style="zoom: 80%;">



<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120093943514.png" alt="image-20201120093943514" style="zoom:67%;">



<h1 id="十、权限控制函数"><a href="#十、权限控制函数" class="headerlink" title="十、权限控制函数"></a>十、权限控制函数</h1><br>

<h2 id="1-isAuth-–-是否拥有指定权限"><a href="#1-isAuth-–-是否拥有指定权限" class="headerlink" title="1. isAuth – 是否拥有指定权限"></a>1. isAuth – 是否拥有指定权限</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120112615869.png" alt="image-20201120112615869" style="zoom:80%;">

<h2 id="2-权限分配页面"><a href="#2-权限分配页面" class="headerlink" title="2. 权限分配页面"></a>2. 权限分配页面</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120113144503.png" alt="image-20201120113144503" style="zoom:80%;">

<h2 id="3-修改权限页面"><a href="#3-修改权限页面" class="headerlink" title="3. 修改权限页面"></a>3. 修改权限页面</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120113354198.png" alt="image-20201120113354198" style="zoom: 50%;">



<h1 id="十一、图片访问地址出错-–-字符串拼接导致"><a href="#十一、图片访问地址出错-–-字符串拼接导致" class="headerlink" title="十一、图片访问地址出错 – 字符串拼接导致"></a>十一、图片访问地址出错 – 字符串拼接导致</h1><h2 id="1-通过F12找到出错原因-–-字符串拼接错误"><a href="#1-通过F12找到出错原因-–-字符串拼接错误" class="headerlink" title="1. 通过F12找到出错原因 – 字符串拼接错误"></a>1. 通过F12找到出错原因 – 字符串拼接错误</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120140937640.png" alt="image-20201120140937640" style="zoom:80%;">

<h2 id="2-找到路径文件的“src”，查找原因"><a href="#2-找到路径文件的“src”，查找原因" class="headerlink" title="2. 找到路径文件的“src”，查找原因"></a>2. 找到路径文件的“src”，查找原因</h2><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120141222061.png" alt="image-20201120141222061" style="zoom:80%;">

<blockquote>
<p><strong>解决方法：</strong></p>
<p>与后端交接，让后端传的value为后面的值，而不是一整个地址</p>
</blockquote>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/image-20201120105245550.png" alt="image-20201120105245550" style="zoom:80%;">]]></content>
      <categories>
        <category>积分商城</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>VUE</tag>
        <tag>积分商城</tag>
      </tags>
  </entry>
  <entry>
    <title>积分商城（商家端）总结</title>
    <url>/2020/11/07/%E7%A7%AF%E5%88%86%E5%95%86%E5%9F%8E%EF%BC%88%E5%95%86%E5%AE%B6%E7%AB%AF%EF%BC%89%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="一、组件的调用方式"><a href="#一、组件的调用方式" class="headerlink" title="一、组件的调用方式"></a>一、组件的调用方式</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-51.png" alt="2020-11-10-0-51"></p>
<h1 id="二、element-ui表单必填写法"><a href="#二、element-ui表单必填写法" class="headerlink" title="二、element-ui表单必填写法"></a>二、element-ui表单必填写法</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-52.png" alt="2020-11-10-0-52"></p>
<a id="more"></a>

<h1 id="三、this-nextTick-函数的用法"><a href="#三、this-nextTick-函数的用法" class="headerlink" title="三、this.$nextTick()函数的用法"></a>三、this.$nextTick()函数的用法</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-53.png" alt="2020-11-10-0-53"></p>
<h1 id="四、element-ui输入框提示写法"><a href="#四、element-ui输入框提示写法" class="headerlink" title="四、element-ui输入框提示写法"></a>四、element-ui输入框提示写法</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-54.png" style="zoom: 67%;">

<h1 id="五、判断路由是否满足条件"><a href="#五、判断路由是否满足条件" class="headerlink" title="五、判断路由是否满足条件"></a>五、判断路由是否满足条件</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-55.png" alt="2020-11-10-0-55" style="zoom: 67%;">

<p><font size="4"> <strong>flist属性：</strong></font></p>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-56.png" alt="2020-11-10 0-56" style="zoom:80%;">

<h1 id="六、路由赋值"><a href="#六、路由赋值" class="headerlink" title="六、路由赋值"></a>六、路由赋值</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%200-57.png">

<h1 id="七、主页路由跳转出错改善方法"><a href="#七、主页路由跳转出错改善方法" class="headerlink" title="七、主页路由跳转出错改善方法"></a>七、主页路由跳转出错改善方法</h1><br>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">router.push(location, onComplete(), onAbort())</span></pre></td></tr></table></figure>

<blockquote>
<p>router.push( … ) =&gt;跳转到某个子页面，并在history中添加一条记录。</p>
<p>onComplete和onAbort是在路由跳转完成和失败时分别执行的回调函数</p>
</blockquote>
<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%201-00.png">

<h1 id="八、修改测试接口"><a href="#八、修改测试接口" class="headerlink" title="八、修改测试接口"></a>八、修改测试接口</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/2020-11-10%201-02.png" style="zoom: 50%;">

<h1 id="九、查看接口地址"><a href="#九、查看接口地址" class="headerlink" title="九、查看接口地址"></a>九、查看接口地址</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/Snipaste_2020-11-02_17-23-31.png" alt="Snipaste_2020-11-02_17-23-31"></p>
<h1 id="十、设置参数默认值"><a href="#十、设置参数默认值" class="headerlink" title="十、设置参数默认值"></a>十、设置参数默认值</h1><br>

<img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/Snipaste_2020-11-03_15-11-11.png" alt="Snipaste_2020-11-03_15-11-11" style="zoom: 67%;">

<h1 id="十一、element-ui对话框组件写法"><a href="#十一、element-ui对话框组件写法" class="headerlink" title="十一、element-ui对话框组件写法"></a>十一、element-ui对话框组件写法</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/Snipaste_2020-11-05_16-23-53.png" alt="Snipaste_2020-11-05_16-23-53"></p>
<h1 id="十二、修改图片访问地址"><a href="#十二、修改图片访问地址" class="headerlink" title="十二、修改图片访问地址"></a>十二、修改图片访问地址</h1><br>

<p><img src="https://calvin-typora-image.oss-cn-hangzhou.aliyuncs.com/img/Snipaste_2020-11-02_17-33-32.png" alt="Snipaste_2020-11-02_17-33-32"></p>
]]></content>
      <categories>
        <category>积分商城</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>VUE</tag>
        <tag>积分商城</tag>
      </tags>
  </entry>
</search>
